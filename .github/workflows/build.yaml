name: Build

env:
  CONFIGURATION: Release

on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

jobs:
  dotnet-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Authenticate to Github packages
      run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/github-actions-training/index.json"

    # This step assumed the solution has been set up with nuget package locking.
    # See https://blog.soenneker.com/how-to-setup-nuget-caching-in-azure-devops-8d94c57b5321 for instructions.
    - uses: actions/cache@v3
      id: cache
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration ${{ env.CONFIGURATION }}

    - name: Package
      run: |
        dotnet publish -c Release --output artifacts --no-restore --no-build

    - uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: artifacts

      # This step requires that coverlet.collector is added to test project
    # - name: Test
    #   run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx

    # - name: Create code coverage report
    #   run: |
    #     dotnet tool install -g dotnet-reportgenerator-globaltool
    #     reportgenerator -reports:tests/**/coverage.cobertura.xml -targetdir:coverage -reporttypes:'Cobertura'
    
    # - name: Code Coverage Summary Report
    #   uses: irongut/CodeCoverageSummary@v1.3.0
    #   with:
    #     filename: coverage/Cobertura.xml
    #     badge: true
    #     format: 'markdown'
    #     output: 'both'

    # - name: Add Coverage PR Comment
    #   uses: marocchino/sticky-pull-request-comment@v2
    #   if: github.event_name == 'pull_request'
    #   with:
    #     recreate: true
    #     path: code-coverage-results.md